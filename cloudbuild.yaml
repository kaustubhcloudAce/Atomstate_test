steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/atomax-production/Atomstate_test/hello-world:latest', '.']
logsBucket: 'gs://test-logging-atomstate'
serviceAccount: 'projects/atomax-production/serviceAccounts/836823160376-compute@developer.gserviceaccount.com'
options: 
    logging: GCS_ONLY
  
  # Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/atomax-production/Atomstate_test/hello-world:latest']
logsBucket: 'gs://test-logging-atomstate'
serviceAccount: 'projects/atomax-production/serviceAccounts/836823160376-compute@developer.gserviceaccount.com'
options: 
    logging: GCS_ONLY
  
  # Deploy to GKE using kubectl
  - name: 'gcr.io/cloud-builders/kubectl'
    args:
      - 'apply'
      - '-f'
      - 'k8s/deployment.yaml'
    env:
      - 'CLOUDSDK_COMPUTE_ZONE=us-central1'
      - 'CLOUDSDK_CONTAINER_CLUSTER=autopilot-cluster-1'
logsBucket: 'gs://test-logging-atomstate'
serviceAccount: 'projects/atomax-production/serviceAccounts/836823160376-compute@developer.gserviceaccount.com'
options: 
    logging: GCS_ONLY
# Define substitutions
substitutions:
  _REGION: REGION
  _PROJECT_ID: PROJECT_ID
  _REPO_NAME: REPO_NAME
  _CLUSTER_NAME: CLUSTER_NAME
  _COMPUTE_ZONE: COMPUTE_ZONE
